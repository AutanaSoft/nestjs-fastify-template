services:
  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    restart: unless-stopped
    ports:
      - '${APP_PORT:-4200}:${APP_PORT:-4200}'
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: nestjs-postgres
    restart: unless-stopped
    # Comment out ports for production - only internal access
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-nestjs_app}
      - POSTGRES_USER=${POSTGRES_USER:-nestjs}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-nestjs}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:latest
    container_name: nestjs-redis
    restart: unless-stopped
    # Comment out ports for production - only internal access
    # ports:
    #   - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - app-network

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Custom network
networks:
  app-network:
    driver: bridge
