import { UserRole, UserStatus } from '@/modules/user/domain/enums';
import { Field, ObjectType } from '@nestjs/graphql';

/**
 * GraphQL response DTO representing user account data
 * Contains all public user information returned by queries and mutations
 * Excludes sensitive data like password hashes for security
 */
@ObjectType({ description: 'User account data representation' })
export class UserDto {
  /** Unique identifier for the user account - generated by the system */
  @Field(() => String, { description: 'Unique user identifier' })
  id: string;

  /** User's email address - used for authentication and communication */
  @Field(() => String, { description: 'User email address for authentication' })
  email: string;

  /** User's display name - must be unique across the system */
  @Field(() => String, { description: 'Unique username for user identification' })
  userName: string;

  /** Current account status - determines user access and functionality */
  @Field(() => UserStatus, { description: 'Current user account status' })
  status: UserStatus;

  /** User's assigned role - determines permissions and access levels */
  @Field(() => UserRole, { description: 'Assigned user role for authorization' })
  role: UserRole;

  /** Timestamp when the user account was created */
  @Field(() => Date, { description: 'Account creation timestamp' })
  createdAt: Date;

  /** Timestamp of the last modification to the user account */
  @Field(() => Date, { description: 'Last account modification timestamp' })
  updatedAt: Date;
}
